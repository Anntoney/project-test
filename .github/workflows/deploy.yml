name: Deploy Insight-Agent to GCP

# When to run this workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Set up some environment variables we'll use throughout
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: insight-agent
  REPOSITORY: insight-agent-repo

jobs:
  # First job: test the Python code
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd app
        pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run simple tests first
      run: |
        cd app
        python -m pytest test_simple.py -v
    
    - name: Run main tests
      run: |
        cd app
        python -m pytest test_main.py -v
    
    - name: Lint Python code
      run: |
        cd app
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
        python -m black --check . || true

  # Second job: validate the Terraform config
  terraform-validate:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.5.0"
    
    - name: Terraform Format Check
      run: |
        cd terraform
        terraform fmt -check
    
    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend=false
    
    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate

  # Third job: build and deploy everything
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [test, terraform-validate]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Google Auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.5.0"
    
    - name: Terraform Init
      run: |
        cd terraform
        terraform init
    
    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan \
          -var="project_id=${{ env.PROJECT_ID }}" \
          -var="region=${{ env.REGION }}" \
          -var="container_image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}" \
          -out=tfplan
    
    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve tfplan
    
    - name: Remove public access
      run: |
        gcloud run services set-iam-policy ${{ env.SERVICE_NAME }} \
          --region=${{ env.REGION }} \
          --policy-file=- <<EOF
        {
          "bindings": [
            {
              "role": "roles/run.invoker",
              "members": [
                "serviceAccount:${{ env.PROJECT_ID }}.svc.id.goog[default/default]"
              ]
            }
          ]
        }
        EOF
    
    - name: Output deployment info
      run: |
        echo "Service deployed successfully!"
        echo "Service URL: $(cd terraform && terraform output -raw service_url)"
        echo "Image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}" 